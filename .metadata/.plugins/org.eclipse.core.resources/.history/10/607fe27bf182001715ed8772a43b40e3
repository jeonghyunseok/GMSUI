--************************
--2017.08.02
-- [1]MAJOR_TAB
-- [2]SUBJECT_TAB 
-- [3]MEMBER_TAB
-- [4]PROF-TAB
-- [5]STUDENT_TAB
-- [6]GRADE_TAB
-- [7]BOARD_TAB
--*************************


CREATE SEQUENCE seq
START WITH 2000
INCREMENT BY 1
NOCACHE
NOCYCLE;

--************************
--[1]MAJOR_TAB
--2017.08.02
--major_id,title
--*************************
--DDL
select *from major;
select *from MEMBER;
alter table major add member_id varchar2(10);
CREATE TABLE Major(
	major_id VARCHAR2(10),
	title VARCHAR2(10),
	
	PRIMARY KEY(major_id)
);

--************************
--[2]SUBJECT_TAB
--2017.08.02
--article_seq,id,title,content,regdate,hitcount
--*************************
--DDL
CREATE TABLE Subject(
	subj_id VARCHAR2(10),
	tilte VARCHAR2(10),
	major_id VARCHAR2(10),
	PRIMARY KEY (subj_id),
	FOREIGN KEY(major_id) REFERENCES Major(major_id)
		ON DELETE CASCADE
	);
--DML
INSERT INTO Subject(subj_id,title,major_id)
VALUES('','','');

--************************
--[3]MEMBER_TAB
--2017.08.02
--회원관리 테이블
--member_id,password,name,ssn,regdate,major_id,phone,email,profile
--*************************
--DDL
CREATE TABLE Member(
	member_id VARCHAR2(10), 
	password VARCHAR2(10), 
	name VARCHAR2(20), 
	ssn VARCHAR2(15),
	regdate DATE,
	major_id VARCHAR2(20),
	phone VARCHAR2(20),
	email VARCHAR2(20),
	profile VARCHAR2(20),
	PRIMARY KEY (member_id)
	FOREIGN KEY(major_id) REFERENCES Major(major_id)
		ON DELETE CASCADE
);
--DML
INSERT INTO PROF(member_id,salary)
VALUES('mankiew','30000');
INSERT INTO Member(member_id,password,name,ssn,regdate,major_id,phone,email,profile)
VALUES('mankiew','i','맨큐','930213-1111111',SYSDATE,'economics','010-1234-1234','mankiew@test.com','mankiew.img');

--************************
--[4]PROF-TAB
--2017.08.02
--member_id,salary
--*************************
--DDL
CREATE TABLE Prof(
	member_id VARCHAR2(10),
	salary VARCHAR2(10),
	PRIMARY KEY (member_id),
	FOREIGN KEY(member_id) REFERENCES Member(member_id)
		ON DELETE CASCADE
	);
--DML
INSERT INTO PROF(member_id,salry)
VALUES('','');

--************************
-- [5]STUDENT_TAB
--2017.08.02
--member_id,stu_no
--*************************
--DDL
CREATE TABLE Student(
	member_id VARCHAR2(10),
	stu_no VARCHAR2(8),
	PRIMARY KEY (member_id),
	FOREIGN KEY(member_id) REFERENCES Member(member_id)
		ON DELETE CASCADE
	);
--DML
INSERT INTO Student(member_id,stu_no)
VALUES('','');
--************************
-- [6]GRADE_TAB
--2017.08.02
--grade_seq,score,exam_date,
--subj_id,member_id
--*************************
--DDL
CREATE TABLE GRADE(
	grade_seq NUMBER,
	score VARCHAR2(3),
	exam_date VARCHAR2(12),
	subj_id VARCHAR2(10),
	member_id VARCHAR2(10),
	PRIMARY KEY (grade_seq),
	FOREIGN KEY(member_id) REFERENCES Member(member_id)
		ON DELETE CASCADE,
	FOREIGN KEY(subj_id) REFERENCES Subject(subj_id)
		ON DELETE CASCADE
	);
DROP TABLE Grade;
ALTER TABLE Grade
RENAME COLUMN id TO member_id;

--DML
SELECT * FROM Grade;
INSERT INTO Grade(grade_seq,score,exam_date,subj_id,member_id)
VALUES(seq.nextval,'49','2017-06','java','u');
-- member_id 를 입력하면 평균점수를 반환하는 sql
--equi join
select avg(score)
from (
select distinct
m.member_id id, m.name name, mj.title major,
g.SCORE score,sj.title subject,g.exam_date
from member m,student s,grade g,subject sj, major mj
where 
    m.member_id=s.member_id
    and m.member_id = g.member_id
    and sj.MAJOR_ID = mj.MAJOR_ID
    and sj.subj_id = g.subj_id)t
where t.id='2';
-----------------=====
select avg(score)
from GRADE g
inner join Member m on m.member_id=g.member_id
where m.member_id='2';
--inner join
select avg(score)
from (select 
		m.member_id id, m.name name, 
		g.SCORE score,g.exam_date exam_date
	    from Grade g
		inner join Subject s on g.subj_id=s.subj_id
		inner join Member m on m.member_id=g.member_id
   )t
where t.id='2';
--group by,having,order by 결과는 성적 전체 내림차순
select t.id id, avg(score) avg
from (select 
		m.member_id id, m.name name, 
		g.SCORE score,g.exam_date exam_date
	    from Grade g
		inner join Subject s on g.subj_id=s.subj_id
		inner join Member m on m.member_id=g.member_id
   )t
group by t.id
having avg(score)>70
order by avg(score) desc
;
------------------
-----------------=
select title,content
from Board b
inner join Member m on b.member_id=m.member_id 
where m.member_id='u';

--[7]BOARD_TAB
--2017.08.02
--게시판관리 테이블
--article_seq,id,title,content,regdate,hitcount
--*************************
--DDL
CREATE TABLE Board(
	article_seq NUMBER,
	id VARCHAR2(10),	
	title VARCHAR2(20),	
	content VARCHAR2(100),	
	regdate DATE,	
	hitcount NUMBER,
	PRIMARY KEY (article_seq),
	FOREIGN KEY(id) REFERENCES Member(id)
		ON DELETE CASCADE
	);
--DML
INSERT INTO Board(article_seq,member_id,title,content,regdate,hitcount)
VALUES(seq.nextval,'3','소나무','일요일은 빨간날 토요일은 파란날',SYSDATE,0);

DELETE FROM BOARD
WHERE ARTICLE_SEQ='1014';
--************************
--Query문 정리
--2017.08.02
--*************************
SELECT * FROM Member Where name='이순신';
SELECT * FROM MEMBER WHETE id='';
SELECT COUNT(*)AS count FROM Member;
SELECT * FROM BOARD 
SELECT DISTINCT id
FROM BOARD
WHERE id LIKE '%자%';
SELECT *
FROM MEMBER
ORDER BY name asc,ssn desc;
SELECT SUM(article_seq) 
FROM Board

UPDATE MEMBER 
SET	password='5'
WHERE id='e';

DELETE FROM MEMBER WHERE id='1';
update MEMBER
set ssn='801118-1896217'
where id='2'
SELECT DISTINCT ssn,name
FROM Member m,Board b
WHERE m.id=b.id  AND ROWNUM <= 2;
SELECT * FROM PROF p,Member m
WHERE p.member_id=m.member_id;
SELECT * FROM STUDENT s,Member m
WHERE s.member_id=m.member_id;
SELECT * FROM Member m,Board b
WHERE m.id=b.id
ORDER BY article_seq DESC;


